@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Future home of the JeffBot twitch bot dashboard. Ignore how shitty this page looks :).</p>
    <p>If you made it here, and liked what you saw about the bot.. or not, feel free to contact me jbowman1107@gmail.com</p>
    <h2>Current Features</h2>
    <ul>
        <li>!clip clip command with the ability to automatically send clips to highlight youtubers (e.g. NoobHunter for Overwatch).</li>
        <li>!ama (or reference bot by name), uses AI (think ChatGPT) to respond to messages, can be given a custom personality for your stream. Can also be configured to automatically respond to events (follows, subs, bits, raids.)</li>
        <li>!banhate Automated bans viewer/sub seller bots.</li>
        <li>!heist a customizable Heist minigame that chat can play.</li>
        <li>!mark can be used by broadcaster and stream editors to mark points in the stream, with an optional description. - Mods Only</li>
        <li>!song can be linked to Spotify to output the current Spotify song in chat.</li>
        <li>!title {title} to change title of stream. - Mods Only</li>
        <li>!games {game} to change game of stream. - Mods Only</li>
        <li>!tags add/remove {tag} to add or remove a tag to the stream. - Mods Only</li>
        <li>!commands add/remove/edit for custom commands, there are custom command variables that can be used in custom commands as below</li>
        <ul>
            <li>{user} - Use this variable to show the user who activated the command.</li>
            <li>{touser} - Use this variable to show the user who is mentioned right after the command, or if there is none, then return the name of the sender</li>
            <li>{ai: some text to feed the ai} - Use this variable to have the AI generate text based on an input. <br/>
                Example: {ai: tell me a random dad joke}</li>
            <li>{httpget: https://some.url/here/that/returns/text} - Use this to send a get request to a URL, will return the text response if successful, else will return an error.</li>
        </ul>
    </ul>
    <h2>Future Features</h2>
    <ul>
        <li>A dashboard for anyone to sign up</li>
        <li>!rpg a custom RPG for chat to play</li>
        <li>Command use analytics</li>
        <li>Chatter analytics</li>
        <li>Stream points system</li>
        <li>And hopefully many more..</li>
        <li>There will be free and premium features</li>
    </ul>
</div>
